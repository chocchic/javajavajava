<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.TestMapper">
	<insert id="insertMember">
		insert into test values(#{id}, #{pw}, #{age}, sysdate)
	</insert>
	
	<!-- // Test table에서 전체 회원의 수를 알고 싶다  
			resultType : 쿼리문 실행 결과의 컬럼 개수와 데이터 타입에 따라-->
	<select id="countMember" resultType="int">
		select count(*) from test
	</select>
	
	<select id="maxAge" resultType="int">
		select max(age) from test
	</select>
	
	<select id="selectAll" resultType="com.test.model.TestDTO">
		select * from test
	</select>
	
	<!-- id 주고 그 사람의 정보 다 받아오기 -->
	<select id="selectOne" resultType="com.test.model.TestDTO">
		select * from test where id=#{id}
	</select>

	<!-- id 주고 회원가입 날짜만 받아오기 -->
	<select id="getReg" resultType="java.sql.Timestamp">
		select reg from test where id=#{id}
	</select>
	
	<!-- 해당 id의 pw와 age 수정 -->
	<update id="updateMember">
		update test set pw=#{pw}, age=#{age} where id=#{id} 
	</update>
	
	<!-- age 파라미터가 넘어오면 해당 age count 수를 조회, age가 안넘어오면 전체 count 개수 조회 -->
	<select id="selectIf" resultType="int">
		select count(*) from test 
		<if test = "age != null">
		where age=#{age}
		</if>
	</select>
	
	<!-- 로그인 체크 id, pw .. 문제점 : pw만 보냈을 때 문제 발생-->
	<select id="selectIf2" resultType="int">
		select count(*) from test  
		<if test="id != null">
		where id=#{id}
		</if>
		<if test = "pw != null">
		and pw=#{pw}
		</if>
	</select>
	
	<!-- 문제점 해결 방안 #1. -->
	<select id="selectIf3" resultType="int">
		select count(*) from test where id=#{id}
		<if test = "pw != null">
		and pw=#{pw}
		</if>
	</select>
	
<!-- <select id="choose" resultType="int">
		select count(*) from test
		<if test="id!=null">
			where id='spring01'
		</if>
		<if test="pw !=null">
			and pw='1234'
		</if>
		<if test="age!=null">
			age age=33
		</if>
	</select>
	 -->	
	 <select id="choose" resultType="int">
		select count(*) from test where id='spring01'
		<choose>
			<!-- <when test="id!=null">where id='spring01'</when> -->
			<when test="pw!=null">and pw='1234'</when>
			<when test="age!=null">age age=33</when>
			<otherwise>
				<!-- 위 조건이 안 맞을 경우 else -->
			</otherwise>
		</choose>
	</select>
	
	<!-- 문제점 해결 방안 #2. -->
	<select id="selectTrim" resultType="int">
		select count(*) from test
		<trim prefix="where" prefixOverrides="and|or">
			<if test="id!=null">id=#{id}</if>
			<if test="pw!=null">and pw=#{pw}</if>
		</trim>
	</select>
	
	<!-- update : 회원정보 수정하고 싶다. pw, age, email, name, mobile -->
	<update id="trimUpdate">
		update test
		<trim prefix="set" suffixOverrides=",">
			<if test="pw!=null">pw=#{pw},</if>
			<if test="age!=null">age=#{age}</if>
		</trim>
		where id=#{id}
	</update>
	
	<!-- foreach : ex) age가 list에 들은 값들과 일치하는 레코드 전체 컬럼정보를 얻고 싶음
		ArrayList : [10,20,30]
	-->
	<select id="selectIn" resultType="com.test.model.TestDTO">
		select * from test where age in 
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}		
		</foreach>
	</select>
	
	<!-- selectKey : id,pw는 외부에서 던져주고, 전체 레코드 수를 구해서 age값으로 하나의 레코드 추가 
	age라는 값으로 저장해두고, order속성이 BEFORE이므로 쿼리 실행전에 selectKey 실행-->
	<insert id="insertSK">
		<selectKey keyProperty="age" order="BEFORE" resultType="int"> select count(*) from test</selectKey>
		insert into test values(#{id},#{pw},#{age},sysdate)
	</insert>

	<!-- like : #{} -> 문자열은 자동으로 ' '에 감싸줌 
					-> 숫자면 그냥 10
	-->
	<select id="selectLike" resultType="com.test.model.TestDTO">
		select * from test where id like '%'||#{keyword}||'%'
	</select>
	
	<!-- 위에서 말했듯이 #{}으로 부른 문자열은 무조건 ' '에 감싸이므로 이를 방지하기 위해 ${ }를 사용한다
	EX) select * from test where 'pw' like '%0%';  // 컬럼명은 문자열 X -> ' ' 절대 감싸주면 안됨 
	 -->
	<select id="searchBBS" resultType="com.test.model.TestDTO">
		select * from test where ${column} like '%'||#{keyword}||'%'
	</select>
	
</mapper>