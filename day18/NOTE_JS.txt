[javascript]

1. 자바스크립트
	1) 객체 기반의 스크립트 프로그래밍 언어
		웹 브라우저 내에서 많이 사용, 다른 응용 프로그램의 내장 객체에도 접근 가능한 기능이 있다.
		node.js : 자바스크립트 엔진에 기반해 만들어진 서버 사이트 플랫폼
2. 기본사항
	- 자바스크립트 작성 위치
		1) HTML 문서의 <head> 태그 안 -> <script> 자바스크립트 작성</script>
		2) HTML 문서의 </body> 태그가 닫히기 전에 <script> 자바스크립트 작성</script> (추천)
		3) 확장자 .js 페이지로 분리해서 만들고 <head>안에 <script src ="js파일 경로"> 태그로 링크걸기 (추천)
	- 주석
		html : <!-- 내용 -->
		css : /* */
		js : // 한줄 주석
		    /* 여러 줄 주석 */
	문장의 끝을 알리는 ; 작성
	
3. 변수
	var let(지역) const(상수)
	- 변수 선언
		var 변수명 = [1,2,3,4,5];
	- 변수 선언 + 초기화
		var 변수명 = 값;
		var 변수명, 변수명;
		var 변수명=값,변수명=값;

4. 데이터 타입
	1) 숫자형 Number
		정수 10진수/16진수 
		실수 
	2) 문자형 String
		양 끝을 쌍따옴표로 묶은 형태(홑따옴표도 가능)
	3) 논리형 Boolean
		true / false 값을 갖는 형태
	4) undefined
		- 변수를 선언만 하고, 초기화하지 않은 상태
		- 함수 인자값 없이 호출되는 경우
		- 존재하지 않는 프로퍼티를 접근한 경우

5. 연산자
	1) 산술연산자
		+ - * / %
	2) 대입연산자
		=
	3) 복합대입연산자 (산술+대입)
		+= -= *= /= %=
	4) 증감 연산자
		증감 : ++
		감소 : --
		전위형/후위형 존재
	5) 비교연산자
		> >= < <=
		==	: 데이터타입 관계없이 같으면 true  	"10" == 10 : true
		===	: 데이터타입도 일치해야 true		"10" == 10 : false
		!=	: 데이터타입 관계없이 다르면 true
		!==	: 데이터타입도 달라야 true
	6) 논리연산자
		||
		&&
		!
	7) 삼항연산자
		? :
	8) 연산자 우선순위 (위=높, 좌 --> 우)
		() []
		단항연산자: ! ++ --		(좌<---우)
		산술 연산자 : * / % + -
		(비트연산자) : >> << >>>
		비교 연산자 : > >= < <= == != === !==
		(비트논리연산자) : & ^ |
		논리연산자 : && ||
		삼항연산자 : (? :)		(좌<---우)
		대입(복합대입)연산자 : = += -= *= /= %=
	
 6. 입력문
	입력창을 통하여 데이터를 입력받는 기능.
	변수 = prompt("메세지");
	변수 = prompt("메세지", "default답변");
	입력받은 데이터는 모두 문자타입으로 가져옴

7. 형변환
	1) 자동형변환
		- 숫자 + 문자 => 문자
		- 불린 + 문자 => 문자
		- 불린 + 숫자 => 숫자
		      (true = 1, false = 0)
		      10+"" --> "10"
	2) 강제형변환 (명시적 형변환)
		- 문자 -> 숫자
			정수 : parseInt()
			        Number()
			실수 : parseFloat()
			        Number()
		- 숫자 -> 문자
			일반숫자 : String(), 뒤에 "" 추가
			16진수 : .toString(진수)
			실수문자 : .toFixed(소수점자리수)

8. 제어문
	조건문 : if, switch
	반복문 : while, do while, for
	보조제어문 : continue, break
	
9. if, switch, while, do-while, for문 자바와 동일
	-조건문 if
	자바와 동일
	if(condition) {
		// code
	}else if(condition) {
		// code
	}else if(condition) {
		// code
	}else{
		// code
	}	

	- 조건문 switch : 자바와 동일
	var 변수 = 값;
	switch(변수) {
		case 값1:
			실행문 ...
			break;

		case 값1:
			실행문 ...
			break;
		...
		default:
			실행문
		}

10. 배열 array
	1) 배열 객체 생성
		1.
			var 참조변수 = new Array();
			참조변수[0] = 1;
			참조변수[1] = 2;
		2.
			var 참조변수 = new Array(값, 값, 값, 값, ... );
		3.
			var 참조변수 = [값, 값, 값, 값, ... ];
			var 참조변수 = [];
	2) 배열 기본 메서드(함수)
		.length		: 배열의 길이
		.push(var)	: 마지막에 데이터 추가
		.pop()		: 마지막 데이터 꺼내서 리턴, 배열에서 삭제
		.shift()		: 배열 첫번째 데이터 꺼내서 리턴, 배열에서 삭제  
		.unshift(var)	: 배열 첫번째에 데이터 추가
		.join("연결문자") 	: 배열 요소들을 연결문자로 연결해서 1개의 문자열로 리턴
		.concat(연결요소)	: 배열과 연결요소를 결합 ( 배열 합치기)
		.slice(idx1, idx2)	: idx1부터 idx2전까지 잘라내서 리턴
		.sort()		: 오름차순 정렬
		.reverse()		: 요소를 반대로
	
11. 함수 function
	// 매개변수 X, 리턴 X
	function 함수명(){
		// 실행 코드들 ...	
	}
	
	// 매개변수 O, 리턴 O
	function 함수명(매개변수명, 매개변수명, ...){
		// 실행 코드들 ...	
		return 값;
	}
	* 리턴타입을 적어주지 않는다
	* 함수명으로 어떤 기능을 하는 함수인지 알려주는게 좋다


